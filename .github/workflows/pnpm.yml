name: pnpm Example Workflow
on:
  push:
    branches:
      - sandbox
jobs:
  build:
    runs-on: ubuntu-20.04
    environment: Sandbox
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    strategy:
      matrix:
        node-version: [18]
    steps:
    - uses: actions/checkout@v3
    - uses: pnpm/action-setup@v3
      with:
        version: 8
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    - name: Install dependencies
      run: pnpm install

    - name: Build Frontend
      run: npm run build
      working-directory: packages/admin

    - name: Deploy Frontend
      uses: reggionick/s3-deploy@v4
      with:
        folder: packages/admin/public
        bucket: ${{ secrets.S3_BUCKET }}
        bucket-region: us-east-1
        files-to-include: '{.*/**,**}'

    - name: Run Migrations
      working-directory: packages/database
      run: |
        touch .env
        echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .env
        pnpm run migrate
           
    - name: Build API
      run: npm run build
      working-directory: packages/api

    - name: Generate deployment package
      run: zip -r deploy.zip . 
      working-directory: packages/api/dist

    - name: Deploy API
      uses: einaregilsson/beanstalk-deploy@v22
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: my-express-api
        environment_name: expressApiEnvironment
        use_existing_version_if_available: true
        version_label: 1
        region: us-east-1
        deployment_package:  packages/api/dist/deploy.zip

